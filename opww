#!/usr/bin/python3
# odd pacman wrapper wrapper
# an interesting AUR wrapper made to work when aur.archlinux.org is down
# 80 lines of wrapping other stuff because I can't bother actually implimenting anything, please read it else you may run opww -S out of habit and make this whole thing attempt to run a package named "-S"

import os
import sys
import shutil
import tempfile

if len(sys.argv) > 1:
  pkg = sys.argv[1]
else:
  print("opqq ERR: No arguments passed. Please just give the correct package name it will try to install.", file=sys.stderr)
  sys.exit(1)

helper=None
# check for AUR helpers
# helper is string: name of helper
# helper is None: use git and pacman
# helper is False: Do not do ANY aur operations because you are root
for i in ["yay", "paru", "trizen", "pikaur", "aura"]:
  if shutil.which(i):
    helper=i
if helper is not None:
  print(f"opqq INFO: Found AUR helper {helper}, will use for AUR options if not down")
else:
  print("opqq WARN: No AUR helper found, updating will require having an manually maitained list of AUR packages")

# Check for root
amiroot=False
if os.geteuid() == 0:
  print("opqq WARN: Running as root... let's see if that works out.")
  print("         | AUR operations will not work.")
  print("         | It is strongly reccommended that you do not run this as root.")
  amiroot=True
  helper=False


def githubMirror():
  cwd=os.getcwd()
  status=12345
  try:
    with tempfile.TemporaryDirectory() as dir:
      os.chdir(dir)
      status=os.system(f"git clone --branch {pkg} --single-branch https://github.com/archlinux/aur.git {pkg}")
      if status != 0:
        print("opqq ERR: Cloning failed. Is this a real AUR package?", file=sys.stderr)
        sys.exit(status)
      os.chdir(pkg)
      os.system("less PKGBUILD")
      if input("opqq ASK: Is this PKGBUILD good to run? (y/n) ").lower() != "y":
          print("opqq ERR: Aborted.", file=sys.stderr)
          sys.exit(2)
      status=os.system("makepkg -si")
    finally:
      os.chdir(cwd)
      sys.exit(status)

print("opqq INFO: Checking if available in your repos...")
if os.system(f"pacman -Si {pkg}>/dev/null") == 0:
  print(f"opqq INFO: Found package {pkg} in your repos.")
  if amiroot:
    os.execvp("pacman", ["pacman", "-S", pkg])
  os.execvp("sudo", ["sudo", "pacman", "-S", pkg])

if helper is False:
  print("opqq ERR: Not found in repos but you are root (uid 0) and can't do AUR operations. Please use an non root account with sudo privilages.")
  sys.exit(1)
elif helper is None:
  # No INFO: using github mirror because no helper is found and they got the WARNing
  # We use the github mirror directly here because there really is no reason to go straight to aur.archlinux.org because the only reason I do in the first place is the benifits of using an proper AUR helper.
  githubMirror()
else:
  print(f"opqq INFO: Attempt 1 of getting AUR package: Using {helper}.")
  status=os.system(f"{helper} -S {pkg}")
  if status != 0:
    print("opqq ERR: AUR helper failed.")
    print("opqq INFO: Using github mirror...")
    githubMirror()
